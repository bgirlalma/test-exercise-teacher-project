{"version":3,"file":"static/js/376.975dc710.chunk.js","mappings":"kOAGO,MAAMA,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mJAQtBC,EAAgBJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2HAQ1BG,EAAYN,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kGAQtBK,EAAYR,EAAAA,GAAOS,GAAEC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,sLAUrBQ,EAAWX,EAAAA,GAAOY,EAACC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,yLAUnBW,GAAYd,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAYgB,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,uDAKxBc,GAAcjB,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAamB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,ocA0B3BiB,EAAcpB,EAAAA,GAAOqB,OAAMC,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,mX,gDC5DxC,MAAMoB,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAINC,EAAeC,EAAAA,KAAaC,MAAM,CACtCL,KAAMI,EAAAA,KACHE,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZP,MAAOG,EAAAA,KAAaE,IAAI,EAAG,cAAcE,SAAS,YAClDN,SAAUE,EAAAA,KACPE,IAAI,GAAI,cACRC,IAAI,GAAI,aACRC,SAAS,cAuEd,EApEyBC,KACzB,MAAMC,GAAWC,EAAAA,EAAAA,OACRC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GAK/C,OACEC,EAAAA,EAAAA,KAACxC,EAAS,CAAAyC,UACNC,EAAAA,EAAAA,MAACrC,EAAa,CAAAoC,SAAA,EACZD,EAAAA,EAAAA,KAACjC,EAAS,CAACoC,QANCC,KAClBN,GAAe,EAAM,EAKiBG,UAC9BD,EAAAA,EAAAA,KAACK,EAAAA,EAAQ,OAEXH,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAC/B,EAAS,CAAAgC,SAAC,kBACXD,EAAAA,EAAAA,KAAC5B,EAAQ,CAAA6B,SAAC,sJAMZD,EAAAA,EAAAA,KAACM,EAAAA,GAAM,CACLtB,cAAeA,EACfuB,iBAAkBnB,EAClBoB,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAC9Bf,GAASiB,EAAAA,EAAAA,IAAaH,IACtBE,GAAW,EACXV,UAEFC,EAAAA,EAAAA,MAAC3B,EAAS,CAAA0B,SAAA,EACRD,EAAAA,EAAAA,KAACtB,EAAW,CACVO,KAAK,OACL4B,GAAG,OACHC,KAAK,OACLC,aAAa,MACbtB,UAAQ,EACRuB,YAAY,UAEdhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAAChC,KAAK,OAAOiC,UAAU,SAEpClB,EAAAA,EAAAA,KAACtB,EAAW,CACVO,KAAK,QACL4B,GAAG,QACHC,KAAK,OACLC,aAAa,MACbtB,UAAQ,EACRuB,YAAY,WAEdhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAAChC,KAAK,QAAQiC,UAAU,SAErClB,EAAAA,EAAAA,KAACtB,EAAW,CACVO,KAAK,WACL4B,GAAG,WACHC,KAAK,WACLC,aAAa,MACbtB,UAAQ,EACRuB,YAAY,cAEdhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAAChC,KAAK,WAAWiC,UAAU,SAExClB,EAAAA,EAAAA,KAACnB,EAAW,CAACiC,KAAK,SAAQb,SAAC,qBAIzB,C","sources":["components/modal/registration/registration.styled.jsx","components/modal/registration/registration.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { Form, Field } from \"formik\";\r\n\r\nexport const Container = styled.div`\r\n  // display: flex;\r\n  // justify-content: center;\r\n  position: absolute;\r\n  top: 50;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%)\r\n`;\r\nexport const FormContainer = styled.div`\r\n  position: relative;\r\n  border-radius: 30px;\r\n  max-width: 565px;\r\n  background-color: #fff;\r\n  padding: 64px;\r\n`;\r\n\r\nexport const WrappIcon = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  margin: 20px 20px 0 0;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const TitleForm = styled.h2`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 40px;\r\n  line-height: 120%;\r\n  letter-spacing: -0.02em;\r\n  color: #121417;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const DescForm = styled.p`\r\n  width: 438px;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 137%;\r\n  color: rgba(18, 20, 23, 0.8);\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const WrappForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledField = styled(Field)`\r\n  width: calc(100% - 20px);\r\n  height: 54px;\r\n  border: 1px solid rgba(18, 20, 23, 0.1);\r\n  border-radius: 12px;\r\n  padding: 0 0 0 18px;\r\n\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 137%;\r\n  color: #121417;\r\n  margin-bottom: 18px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  transition: 0.5s ease-in-out;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    border: 1px solid #6699cc;\r\n  }\r\n`;\r\n\r\nexport const ButtonModal = styled.button`\r\n  background-color: #f4c550;\r\n  width: 100%;\r\n  height: 60px;\r\n  padding: 0;\r\n  border-radius: 12px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: 1s ease-in-out;\r\n\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  line-height: 156%;\r\n  color: #121417;\r\n\r\n  &:hover{\r\n    background-color: #b34700;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import { Formik, ErrorMessage } from 'formik';\r\nimport { CloseSvg } from '../../image/close';\r\nimport {\r\n  Container,\r\n  FormContainer,\r\n  WrappIcon,\r\n  TitleForm,\r\n  DescForm,\r\n  WrappForm,\r\n  StyledField,\r\n  ButtonModal,\r\n} from './registration.styled';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../../../redux/user-autorization/authOperation';\r\nimport { useState } from 'react';\r\n\r\n// початковий state форми\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(3, 'Too Short!')\r\n    .max(15, 'Too Long!')\r\n    .required('Required'),\r\n  email: Yup.string().min(8, 'Too Short!').required('Required'),\r\n  password: Yup.string()\r\n    .min(10, 'Too Short!')\r\n    .max(15, 'Too Long!')\r\n    .required('Required'),\r\n});\r\n\r\nconst UserRegistration = () => {\r\nconst dispatch = useDispatch()\r\n  const [isOpenModal, setIsOpenModal] = useState(false)\r\n  \r\n  const handleClose = () => {\r\n    setIsOpenModal(false);\r\n  }\r\n  return (\r\n    <Container>\r\n        <FormContainer>\r\n          <WrappIcon onClick={handleClose}>\r\n            <CloseSvg />\r\n          </WrappIcon>\r\n          <div>\r\n            <TitleForm>Registration</TitleForm>\r\n            <DescForm>\r\n              Thank you for your interest in our platform! In order to register,\r\n              we need some information. Please provide us with the following\r\n              information\r\n            </DescForm>\r\n          </div>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={SignupSchema}\r\n            onSubmit={(values, { resetForm }) => {\r\n              dispatch(registerUser(values));\r\n              resetForm();\r\n            }}\r\n          >\r\n            <WrappForm>\r\n              <StyledField\r\n                name=\"name\"\r\n                id=\"name\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                required\r\n                placeholder=\"Name\"\r\n              />\r\n              <ErrorMessage name=\"name\" component=\"div\" />\r\n\r\n              <StyledField\r\n                name=\"email\"\r\n                id=\"email\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                required\r\n                placeholder=\"Email\"\r\n              />\r\n              <ErrorMessage name=\"email\" component=\"div\" />\r\n\r\n              <StyledField\r\n                name=\"password\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"off\"\r\n                required\r\n                placeholder=\"Password\"\r\n              />\r\n              <ErrorMessage name=\"password\" component=\"div\" />\r\n\r\n              <ButtonModal type=\"submit\">Sign Up</ButtonModal>\r\n            </WrappForm>\r\n          </Formik>\r\n        </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","FormContainer","_templateObject2","WrappIcon","_templateObject3","TitleForm","h2","_templateObject4","DescForm","p","_templateObject5","WrappForm","Form","_templateObject6","StyledField","Field","_templateObject7","ButtonModal","button","_templateObject8","initialValues","name","email","password","SignupSchema","Yup","shape","min","max","required","UserRegistration","dispatch","useDispatch","isOpenModal","setIsOpenModal","useState","_jsx","children","_jsxs","onClick","handleClose","CloseSvg","Formik","validationSchema","onSubmit","values","_ref","resetForm","registerUser","id","type","autoComplete","placeholder","ErrorMessage","component"],"sourceRoot":""}